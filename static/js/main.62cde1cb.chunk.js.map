{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","step","frameSize","itemWidth","animationDuration","position","nextButton","setState","prevButton","changeStep","e","target","value","changeFrameSize","changeItemWidth","changeAnimationDuration","images","this","props","className","style","width","transform","marginLeft","transition","map","image","src","alt","type","onClick","htmlFor","id","min","max","onChange","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62cde1cb.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = {\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  position: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state:State = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    position: 0,\n  };\n\n  nextButton = () => {\n    const {\n      step,\n      frameSize,\n      position,\n    } = this.state;\n\n    if ((position - frameSize - step) >= -10) {\n      this.setState({ position: position - step });\n    } else {\n      this.setState({ position: -10 + frameSize });\n    }\n  };\n\n  prevButton = () => {\n    const {\n      step,\n      position,\n    } = this.state;\n\n    if ((position + step) <= 0) {\n      this.setState({ position: position + step });\n    } else {\n      this.setState({ position: 0 });\n    }\n  };\n\n  changeStep = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +e.target.value });\n  };\n\n  changeFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +e.target.value });\n  };\n\n  changeItemWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +e.target.value });\n  };\n\n  changeAnimationDuration = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +e.target.value });\n  };\n\n  render() {\n    const { images } = this.props;\n\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      position,\n    } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel_wrapper\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${position}px)`,\n              marginLeft: `${position * itemWidth}px`,\n              transition: `${animationDuration}ms`,\n              width: `${frameSize * itemWidth}px`,\n            }}\n          >\n            {images.map((image) => (\n              <li key=\"image\" className=\"Carousel__item\">\n                <img\n                  src={image}\n                  alt=\"Smile\"\n                  width={itemWidth}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            this.prevButton();\n          }}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            this.nextButton();\n          }}\n        >\n          Next\n        </button>\n\n        <div className=\"labels\">\n          <label\n            htmlFor=\"stepId\"\n            className=\"label\"\n          >\n            Step:\n            <input\n              type=\"number\"\n              id=\"stepId\"\n              className=\"input\"\n              min={1}\n              max={10}\n              value={step}\n              onChange={this.changeStep}\n            />\n          </label>\n          <label\n            htmlFor=\"frameId\"\n            className=\"label\"\n          >\n            Frame size:\n            <input\n              type=\"number\"\n              id=\"frameId\"\n              className=\"input\"\n              min={1}\n              max={10}\n              value={frameSize}\n              onChange={this.changeFrameSize}\n            />\n          </label>\n\n          <label\n            htmlFor=\"itemId\"\n            className=\"label\"\n          >\n            Item width:\n            <input\n              type=\"number\"\n              id=\"itemId\"\n              className=\"input\"\n              max={390}\n              value={itemWidth}\n              onChange={this.changeItemWidth}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animId\"\n            className=\"label\"\n          >\n            Animation Duration:\n            <input\n              type=\"number\"\n              id=\"animId\"\n              className=\"input\"\n              value={animationDuration}\n              onChange={this.changeAnimationDuration}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Carousel </h1>\n\n        <Carousel\n          images={images}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}