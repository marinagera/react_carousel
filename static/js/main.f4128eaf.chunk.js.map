{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","step","frameSize","itemWidth","animationDuration","position","nextButton","setState","props","prevButton","images","this","className","style","width","transform","marginLeft","transition","map","image","src","alt","type","onClick","htmlFor","id","min","max","value","onChange","event","target","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uPAeMA,E,4MACJC,MAAc,CACZC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,SAAU,G,EAGZC,WAAa,WACN,EAAKN,MAAMK,SAAW,EAAKL,MAAME,UAAY,EAAKF,MAAMC,OAAU,GACrE,EAAKM,UAAS,SAAAC,GAAK,MAAK,CAAEH,SAAUG,EAAMH,SAAWG,EAAMP,SAE3D,EAAKM,UAAS,SAAAC,GAAK,MAAK,CAAEH,UAAW,GAAKG,EAAMN,e,EAIpDO,WAAa,WACN,EAAKT,MAAMK,SAAW,EAAKL,MAAMC,MAAS,EAC7C,EAAKM,UAAS,SAAAC,GAAK,MAAK,CAAEH,SAAUG,EAAMH,SAAWG,EAAMP,SAE3D,EAAKM,UAAS,iBAAO,CAAEF,SAAU,O,4CAIrC,WAAU,IAAD,OACCK,EAAWC,KAAKH,MAAhBE,OAER,EAMIC,KAAKX,MALPC,EADF,EACEA,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,kBACAC,EALF,EAKEA,SAGF,OACE,sBAAKO,UAAU,WAAf,UACE,qBACEA,UAAU,mBACVC,MAAO,CACLC,MAAM,GAAD,OAAKZ,EAAYC,EAAjB,OAHT,SAME,oBACES,UAAU,iBACVC,MAAO,CACLE,UAAU,cAAD,OAAgBV,EAAhB,OACTW,WAAW,GAAD,OAAKX,EAAWF,EAAhB,MACVc,WAAW,GAAD,OAAKb,EAAL,MACVU,MAAM,GAAD,OAAKZ,EAAYC,EAAjB,OANT,SASGO,EAAOQ,KAAI,SAACC,GAAD,OACV,oBAAgBP,UAAU,iBAA1B,SACE,qBACEQ,IAAKD,EACLE,IAAI,QACJP,MAAOX,KAJH,gBAWd,wBACEmB,KAAK,SACLV,UAAU,SACVW,QAAS,WACP,EAAKd,cAJT,kBAUA,wBACEa,KAAK,SACLV,UAAU,SACVW,QAAS,WACP,EAAKjB,cAJT,kBAUA,sBAAKM,UAAU,SAAf,UACE,wBACEY,QAAQ,SACRZ,UAAU,QAFZ,kBAKE,uBACEU,KAAK,SACLG,GAAG,SACHb,UAAU,QACVc,IAAK,EACLC,IAAK,GACLC,MAAO3B,EACP4B,SAAU,SAACC,GACT,EAAKvB,SAAS,CAAEN,MAAO6B,EAAMC,OAAOH,cAK1C,wBACEJ,QAAQ,UACRZ,UAAU,QAFZ,wBAKE,uBACEU,KAAK,SACLG,GAAG,UACHb,UAAU,QACVc,IAAK,EACLC,IAAK,GACLC,MAAO1B,EACP2B,SAAU,SAACC,GACT,EAAKvB,SAAS,CAAEL,WAAY4B,EAAMC,OAAOH,cAK/C,wBACEJ,QAAQ,SACRZ,UAAU,QAFZ,wBAKE,uBACEU,KAAK,SACLG,GAAG,SACHb,UAAU,QACVe,IAAK,IACLC,MAAOzB,EACP0B,SAAU,SAACC,GACT,EAAKvB,SAAS,CAAEJ,WAAY2B,EAAMC,OAAOH,cAK/C,wBACEJ,QAAQ,SACRZ,UAAU,QAFZ,gCAKE,uBACEU,KAAK,SACLG,GAAG,SACHb,UAAU,QACVgB,MAAOxB,EACPyB,SAAU,SAACC,GACT,EAAKvB,SAAS,CAAEH,mBAAoB0B,EAAMC,OAAOH,wB,GAtJ1CI,IAAMC,WAgKdlC,ICvKTmC,E,4MACJlC,MAAQ,CACNU,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWC,KAAKX,MAAhBU,OAER,OACE,sBAAKE,UAAU,MAAf,UACE,2CAEA,cAAC,EAAD,CACEF,OAAQA,W,GAxBAsB,IAAMC,WA+BTC,ICpCfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f4128eaf.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = {\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  position: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state:State = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    position: 0,\n  };\n\n  nextButton = () => {\n    if ((this.state.position - this.state.frameSize - this.state.step) >= -10) {\n      this.setState(props => ({ position: props.position - props.step }));\n    } else {\n      this.setState(props => ({ position: -10 + props.frameSize }));\n    }\n  };\n\n  prevButton = () => {\n    if ((this.state.position + this.state.step) <= 0) {\n      this.setState(props => ({ position: props.position + props.step }));\n    } else {\n      this.setState(() => ({ position: 0 }));\n    }\n  };\n\n  render() {\n    const { images } = this.props;\n\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      position,\n    } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel_wrapper\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${position}px)`,\n              marginLeft: `${position * itemWidth}px`,\n              transition: `${animationDuration}ms`,\n              width: `${frameSize * itemWidth}px`,\n            }}\n          >\n            {images.map((image) => (\n              <li key=\"image\" className=\"Carousel__item\">\n                <img\n                  src={image}\n                  alt=\"Smile\"\n                  width={itemWidth}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            this.prevButton();\n          }}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            this.nextButton();\n          }}\n        >\n          Next\n        </button>\n\n        <div className=\"labels\">\n          <label\n            htmlFor=\"stepId\"\n            className=\"label\"\n          >\n            Step:\n            <input\n              type=\"number\"\n              id=\"stepId\"\n              className=\"input\"\n              min={1}\n              max={10}\n              value={step}\n              onChange={(event) => {\n                this.setState({ step: +event.target.value });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameId\"\n            className=\"label\"\n          >\n            Frame size:\n            <input\n              type=\"number\"\n              id=\"frameId\"\n              className=\"input\"\n              min={1}\n              max={10}\n              value={frameSize}\n              onChange={(event) => {\n                this.setState({ frameSize: +event.target.value });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"itemId\"\n            className=\"label\"\n          >\n            Item width:\n            <input\n              type=\"number\"\n              id=\"itemId\"\n              className=\"input\"\n              max={390}\n              value={itemWidth}\n              onChange={(event) => {\n                this.setState({ itemWidth: +event.target.value });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animId\"\n            className=\"label\"\n          >\n            Animation Duration:\n            <input\n              type=\"number\"\n              id=\"animId\"\n              className=\"input\"\n              value={animationDuration}\n              onChange={(event) => {\n                this.setState({ animationDuration: +event.target.value });\n              }}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Carousel </h1>\n\n        <Carousel\n          images={images}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}